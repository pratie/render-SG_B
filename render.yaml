services:
  - type: web
    name: reddit-tracker-api
    env: python
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      PYTHONPATH=/opt/render/project/src
    startCommand: |
      # Debug disk mounting
      echo "=== Checking Disk Mount ==="
      df -h | grep /var/data || echo "Warning: Disk not mounted!"
      ls -la /var/data || echo "Warning: Directory not accessible!"
      id  # Print current user info
      echo "==========================="
      
      # Wait for disk to be mounted
      echo "Waiting for disk mount..."
      for i in {1..30}; do
        if [ -d "/var/data" ]; then
          echo "Disk mounted successfully!"
          break
        fi
        echo "Attempt $i: Waiting for disk mount..."
        sleep 1
      done
      
      # Set environment variables
      export ENV=production
      export RENDER=true
      export DATABASE_URL="sqlite:////var/data/reddit_analysis.db"
      export PYTHONPATH=/opt/render/project/src
      
      # Ensure database directory is writable
      echo "=== Setting up database directory ==="
      ls -la /var/data
      chmod 777 /var/data || echo "Cannot change permissions of /var/data"
      touch /var/data/test_write || echo "Cannot write to /var/data"
      rm -f /var/data/test_write
      echo "==========================="
      
      # Initialize alembic if not already initialized
      echo "=== Initializing Alembic ==="
      if [ ! -f "/var/data/alembic.ini" ]; then
        cp alembic.ini /var/data/alembic.ini
        cp -r alembic /var/data/
        echo "Copied alembic files to /var/data"
      fi
      
      # Run database migrations
      echo "=== Running Database Migrations ==="
      echo "Environment: $ENV"
      echo "Database URL: $DATABASE_URL"
      echo "Python Path: $PYTHONPATH"
      
      # Initialize fresh database if needed
      if [ ! -f "/var/data/reddit_analysis.db" ]; then
        echo "Creating fresh database..."
        touch /var/data/reddit_analysis.db
        chmod 666 /var/data/reddit_analysis.db
      fi
      
      # Run migrations with retries
      for i in {1..5}; do
        echo "Migration attempt $i..."
        if alembic upgrade head; then
          echo "Migration successful!"
          break
        else
          echo "Migration attempt $i failed. Checking database..."
          ls -la /var/data/reddit_analysis.db
          sqlite3 /var/data/reddit_analysis.db ".schema" || echo "Cannot access database"
          sleep 2
        fi
      done
      
      # Verify database
      echo "=== Database Status ==="
      echo "Database file:"
      ls -la /var/data/reddit_analysis.db
      echo "Tables:"
      sqlite3 /var/data/reddit_analysis.db ".tables" || echo "Cannot access database"
      echo "Schema:"
      sqlite3 /var/data/reddit_analysis.db ".schema" || echo "Cannot access database"
      echo "==========================="
      
      # Start the application
      exec uvicorn main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: ENV
        value: production
      - key: RENDER
        value: "true"
      - key: DATABASE_URL
        value: sqlite:////var/data/reddit_analysis.db
      - key: PYTHONUNBUFFERED
        value: "true"
      - key: PYTHON_VERSION
        value: 3.11.0
    disk:
      name: sqlite-data
      mountPath: /var/data
      sizeGB: 1